"use strict";(self.webpackChunkbadger_home=self.webpackChunkbadger_home||[]).push([[769],{377:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var a=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],l={sidebar_position:2},s="Tutorial",u={unversionedId:"getting-started/tutorial",id:"getting-started/tutorial",isDocsHomePage:!1,title:"Tutorial",description:"Make sure you have Badger installed and setup.",source:"@site/docs/getting-started/tutorial.md",sourceDirName:"getting-started",slug:"/getting-started/tutorial",permalink:"/Badger/docs/getting-started/tutorial",editUrl:"https://github.com/SLAC-ML/Badger-Home/edit/master/docs/getting-started/tutorial.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/Badger/docs/getting-started/installation"},next:{title:"API Usage",permalink:"/Badger/docs/guides/api-usage"}},d=[{value:"Get basic information about Badger",id:"get-basic-information-about-badger",children:[],level:2},{value:"Run and save an optimization",id:"run-and-save-an-optimization",children:[],level:2},{value:"Re-run an optimization",id:"re-run-an-optimization",children:[],level:2},{value:"View the historical optimization data",id:"view-the-historical-optimization-data",children:[],level:2},{value:"Create a simple environment",id:"create-a-simple-environment",children:[],level:2}],m={toc:d};function p(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tutorial"},"Tutorial"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Heads-up")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Make sure you have Badger ",(0,o.kt)("a",{parentName:"p",href:"./installation"},"installed and setup"),"."))),(0,o.kt)("p",null,"Let's discover ",(0,o.kt)("strong",{parentName:"p"},"Badger in less than 5 minutes"),". All of the following commands are assumed to be run in a terminal (Mac, Windows, and Linux are supported)."),(0,o.kt)("h2",{id:"get-basic-information-about-badger"},"Get basic information about Badger"),(0,o.kt)("p",null,"First let's verify that Badger has been installed and configured correctly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"badger\n")),(0,o.kt)("p",null,"Which should give you something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="output"',title:'"output"'},"name: Badger the optimizer\nversion: 0.5.3\nplugin root: /root/badger/plugins\ndatabase root: /root/badger/db\nlogbook root: /root/badger/logbook\narchive root: /root/badger/archived\nextensions:\n  - xopt\n")),(0,o.kt)("h2",{id:"run-and-save-an-optimization"},"Run and save an optimization"),(0,o.kt)("p",null,"Create a yaml file under your ",(0,o.kt)("inlineCode",{parentName:"p"},"pwd")," (where you would run an optimization with Badger) with the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"variables:\n  - x2\nobjectives:\n  - c1\n")),(0,o.kt)("p",null,"To run and save an optimization, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"badger run -a silly -e TNK -c config.yaml -s helloworld\n")),(0,o.kt)("p",null,"Badger will ask you to review the optimization routine:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="output"',title:'"output"'},"Please review the routine to be run:\n\n=== Optimization Routine ===\nname: mottled-sloth\nalgo: silly\nenv: TNK\nalgo_params:\n  dimension: 1\n  max_iter: 42\nenv_params: null\nconfig:\n  variables:\n    - x2: 0 -> 3.14159\n  objectives:\n    - c1: MINIMIZE\n  constraints: null\n\nProceed ([y]/n)?\n")),(0,o.kt)("p",null,"Hit return to confirm. Badger will print out a table of all the evaluated\nsolutions along the run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'{3,19} title="output"',"{3,19}":!0,title:'"output"'},"|    iter    |     c1     |     x2     |\n----------------------------------------\n|  1         | -1.094     |  0.07432   |\n|  2         |  3.563     |  2.159     |\n|  3         |  8.749     |  3.138     |\n|  4         |  5.351     |  2.54      |\n|  5         |  8.17      |  3.045     |\n|  6         |  6.536     |  2.763     |\n|  7         |  3.007     |  2.027     |\n|  8         | -1.089     |  0.1063    |\n|  9         |  4.127     |  2.286     |\n|  10        |  3.519     |  2.149     |\n|  11        |  6.647     |  2.783     |\n|  12        |  1.074     |  1.474     |\n|  13        | -0.8621    |  0.4878    |\n|  14        |  3.821     |  2.218     |\n|  15        | -0.9228    |  0.421     |\n|  16        |  6.205     |  2.703     |\n|  17        | -1.1       |  0.005409  |\n|  18        |  8.224     |  3.054     |\n|  19        |  7.584     |  2.947     |\n|  20        | -0.8961    |  0.4515    |\n|  21        | -1.093     |  0.08082   |\n|  22        |  1.293     |  1.547     |\n|  23        |  2.593     |  1.922     |\n|  24        |  5.563     |  2.581     |\n|  25        |  2.046     |  1.774     |\n|  26        |  2.501     |  1.898     |\n|  27        | -0.8853    |  0.4633    |\n|  28        | -0.5459    |  0.7444    |\n|  29        | -0.8881    |  0.4604    |\n|  30        | -0.4806    |  0.787     |\n|  31        | -1.1       |  0.01909   |\n|  32        |  0.4855    |  1.259     |\n|  33        |  0.8217    |  1.386     |\n|  34        |  6.036     |  2.671     |\n|  35        | -0.7649    |  0.5789    |\n|  36        |  0.06972   |  1.082     |\n|  37        |  7.325     |  2.903     |\n|  38        | -0.7764    |  0.5689    |\n|  39        |  6.042     |  2.673     |\n|  40        |  5.008     |  2.471     |\n|  41        |  4.274     |  2.318     |\n|  42        | -0.8561    |  0.4939    |\n========================================\n")),(0,o.kt)("p",null,"You would notice that the optimal solutions (in this case\noptimal means minimal ",(0,o.kt)("inlineCode",{parentName:"p"},"c1"),") at the evaluation time are highlighted."),(0,o.kt)("p",null,"In the example above, we use the ",(0,o.kt)("strong",{parentName:"p"},"silly")," algorithm (which is just a random search algorithm) to optimize the ",(0,o.kt)("strong",{parentName:"p"},"TNK"),"\nenvironment, as shown in the reviewed routine. Environment ",(0,o.kt)("strong",{parentName:"p"},"TNK")," has 2\nvariables and 5 observations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{7,8,10-14} title="TNK environment"',"{7,8,10-14}":!0,title:'"TNK','environment"':!0},"name: TNK\nversion: '0.1'\ndependencies:\n  - numpy\nparams: null\nvariables:\n  - x1: 0 -> 3.14159\n  - x2: 0 -> 3.14159\nobservations:\n  - y1\n  - y2\n  - c1\n  - c2\n  - some_array\n")),(0,o.kt)("p",null,"We specify in the ",(0,o.kt)("inlineCode",{parentName:"p"},"config.yaml")," that we would like to tune varaible ",(0,o.kt)("inlineCode",{parentName:"p"},"x2"),", and minimize observation ",(0,o.kt)("inlineCode",{parentName:"p"},"c1")," of environment ",(0,o.kt)("strong",{parentName:"p"},"TNK")," as objective. The configuration that could reproduce the whole optimization setup is called a ",(0,o.kt)("strong",{parentName:"p"},"routine")," in Badger. A routine contains the information of the algorithm, the environment, and the config of the optimization (the variables, the objectives, and the constraints)."),(0,o.kt)("p",null,"We just saved the routine of the run as ",(0,o.kt)("inlineCode",{parentName:"p"},"helloworld"),". Now you could view the routine again by:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"badger routine helloworld\n")),(0,o.kt)("h2",{id:"re-run-an-optimization"},"Re-run an optimization"),(0,o.kt)("p",null,"We can re-run a saved routine in Badger. Let's re-run the ",(0,o.kt)("inlineCode",{parentName:"p"},"helloworld")," routine that we just saved:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"badger routine helloworld -r\n")),(0,o.kt)("p",null,"Badger would behave exactly the same way as the first time you run the routine."),(0,o.kt)("h2",{id:"view-the-historical-optimization-data"},"View the historical optimization data"),(0,o.kt)("p",null,"You can ",(0,o.kt)("inlineCode",{parentName:"p"},"cd")," to the Badger archive root (the one you setup during the initial configurations) and view the historical optimization data. The file structure is a tree-like one, with year, year-month, year-month-day as the first 3 levels of branches, and the optimization runs as leaves:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:'{4} title="Badger archive root file structure"',"{4}":!0,title:'"Badger',archive:!0,root:!0,file:!0,'structure"':!0},"|--2021\n    |--2021-11\n        |--2021-11-24\n            |--BadgerOpt-2021-11-24-133007.yaml\n            |--BadgerOpt-2021-11-24-113241.yaml\n            |--...\n        |--...\n    |--...\n|--...\n")),(0,o.kt)("p",null,"The yaml data file contains the routine information and the solutions evaluated during the run. The content would look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="BadgerOpt-2021-11-24-133007.yaml"',title:'"BadgerOpt-2021-11-24-133007.yaml"'},"routine:\n  name: helloworld\n  algo: silly\n  env: TNK\n  algo_params:\n    dimension: 1\n    max_iter: 10\n  env_params: null\n  config:\n    variables:\n      - x2:\n          - 0.0\n          - 3.1416\n    objectives:\n      - c1: MINIMIZE\n    constraints: null\ndata:\n  timestamp:\n    - 24-Nov-2021 13:30:06\n    - 24-Nov-2021 13:30:06\n    - 24-Nov-2021 13:30:06\n    - 24-Nov-2021 13:30:06\n    - 24-Nov-2021 13:30:06\n    - 24-Nov-2021 13:30:06\n    - 24-Nov-2021 13:30:06\n    - 24-Nov-2021 13:30:07\n    - 24-Nov-2021 13:30:07\n    - 24-Nov-2021 13:30:07\n  c1:\n    - 2.093905436806936\n    - 2.6185501712620036\n    - -0.8170601778601619\n    - 7.869183841178197\n    - -1.0945113202011\n    - 0.514833333947652\n    - -1.0331173238615994\n    - 1.4523371516674013\n    - 1.3610274948700156\n    - -0.0042273815683477045\n  x2:\n    - 1.78715008793524\n    - 1.9283542649788197\n    - 0.5319208795862764\n    - 2.9948595695254556\n    - 0.07408562477903413\n    - 1.2707609271407632\n    - 0.2586168520000207\n    - 1.5976035652399507\n    - 1.5687662333407153\n    - 1.0467915830917118\n")),(0,o.kt)("h2",{id:"create-a-simple-environment"},"Create a simple environment"),(0,o.kt)("p",null,"Now let's create a simple Badger environment and run optimization on it."))}p.isMDXComponent=!0}}]);